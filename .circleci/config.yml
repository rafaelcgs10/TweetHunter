# Ruby CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/ruby/ for more details
#
version: 2.1 

orbs:
  ruby: circleci/ruby@0.1.2 # Ruby orb registry: https://circleci.com/orbs/registry/orb/circleci/ruby

jobs: 
  rspec: 
    docker: 
      - image: circleci/ruby:2.6.0-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: myDB
      - image: redis:6.0-rc1-alpine3.11
    steps: 
      - checkout

      - restore_cache:
          keys:
            - rails-demo-bundle-v1-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v1-

      - run:
          name: Bundle Install
          command: gem install bundler:2.1.2 && bundle check --path /tmp/bundle || bundle install  --jobs=4 --retry=3

      - save_cache:
          key: rails-demo-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - /tmp/bundle      

      - run:
          name: Create database
          command: bundle exec rake db:create

      - restore_cache:
          keys:
            - yarn-cache-v1-{{ checksum "yarn.lock" }}
            - yarn-cache-v1-

      - run:
          name: Yarn cache
          command: yarn install --cache-folder ~/.cache/yarn

      - run:
          name: Webpacker compile
          command: bundle exec rake webpacker:compile

      - save_cache:
         key: yarn-cache-v1-{{ checksum "yarn.lock" }}
         paths:
           - ~/.cache/yarn
            
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Run rspec
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
          path: test_results

  rubocop:
    docker:
      - image: circleci/ruby:2.6.3
    steps:
      - checkout

      - restore_cache:
          key: rails-demo-bundle-v1-{{ checksum "Gemfile" }}
  
      - run:
          name: Bundle Install
          command: gem install bundler:2.1.2 && bundle check --path=/tmp/bundle || bundle install --path=/tmp/bundle --jobs=4 --retry=3
      - run:
          name: Lint with rubocop
          command: bundle exec rubocop

  sorbet:
    docker:
      - image: circleci/ruby:2.6.0
    steps:
      - checkout
      
      - restore_cache:
          key: rails-demo-bundle-v1-{{ checksum "Gemfile" }}

      - restore_cache:
          key: sorbet-{{ checksum "Gemfile" }}
  
      - run:
          name: Bundle Install
          command: gem install bundler:2.1.2 && bundle check --path=/tmp/bundle || bundle install --path=/tmp/bundle --jobs=4 --retry=3
      - save_cache:
          key: sorbet-{{ checksum "Gemfile" }}
          paths:
            - sorbet

      - run:
          name: Type Check with Sorbet
          command: bundle exec srb tc

  deploy:
    docker: 
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master  

workflows:
  version: 2

  build-deploy:
    jobs:
      - rubocop:
          filters:
            branches:
              only:
                - dev
                - master
      - rspec:
          filters:
            branches:
              only:
                - dev
                - master
      - sorbet:
          filters:
            branches:
              only:
                - dev
                - master
      - deploy:
          requires:
            - rubocop
            - rspec
            - sorbet
          filters:
            branches:
              only:
                - master
